name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy-to-gcloud:
    if: github.repository == 'gonibix23/smart-grids-sgbi'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          install_components: 'kubectl'

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials develop \
            --zone europe-southwest1 \
            --project ${{ secrets.GCLOUD_PROJECT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and Push Kafka Producer
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kafka_producer:latest ./kafka_producer
          docker push ${{ secrets.DOCKER_USERNAME }}/kafka_producer:latest

      - name: Build and Push Spark Consumer
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spark_consumer:latest ./spark_consumer
          docker push ${{ secrets.DOCKER_USERNAME }}/spark_consumer:latest

      - name: Build and Push Exit API
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api:latest ./api
          docker push ${{ secrets.DOCKER_USERNAME }}/api:latest

      - name: Deploy to GKE
        run: |
          kubectl delete -f ./gcloud_deployment.yaml --ignore-not-found
          kubectl apply -f ./gcloud_deployment.yaml

      - name: Verify Pods Status
        run: |
          echo "Checking pods status in cluster..."
          kubectl get pods

